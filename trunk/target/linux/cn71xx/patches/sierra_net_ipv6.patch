--- a/drivers/net/usb/sierra_net.c	2014-04-15 15:00:07.000000000 -0700
+++ b/drivers/net/usb/sierra_net.c	2014-09-08 16:21:37.228735822 -0700
@@ -131,6 +131,7 @@
 #define SIERRA_NET_SESSION_IDLE       0x00
 /* LSI Link types */
 #define SIERRA_NET_AS_LINK_TYPE_IPv4  0x00
+#define SIERRA_NET_AS_LINK_TYPE_IPv6  0x02
 
 struct lsi_umts {
 	u8 protocol;
@@ -192,10 +193,11 @@
 	dev->data[0] = (unsigned long)priv;
 }
 
-/* is packet IPv4 */
+/* is packet IP */
 static inline int is_ip(struct sk_buff *skb)
 {
-	return skb->protocol == cpu_to_be16(ETH_P_IP);
+	return ((skb->protocol == cpu_to_be16(ETH_P_IP)) ||
+			(skb->protocol == cpu_to_be16(ETH_P_IPV6)));
 }
 
 /*
@@ -374,10 +376,11 @@
 	}
 
 	/* Validate the link type */
-	if (lsi->link_type != SIERRA_NET_AS_LINK_TYPE_IPv4) {
-		netdev_err(dev->net, "Link type unsupported: 0x%02x\n",
+	if ((lsi->link_type != SIERRA_NET_AS_LINK_TYPE_IPv4) &&
+		(lsi->link_type != SIERRA_NET_AS_LINK_TYPE_IPv6)) {
+		netdev_err(dev->net, "Link unavailable: 0x%02x",
 			lsi->link_type);
-		return -1;
+		return 0;
 	}
 
 	/* Validate the coverage */
@@ -724,6 +727,7 @@
 
 	/* Set up the netdev */
 	dev->net->flags |= IFF_NOARP;
+	dev->net->flags |= IFF_MULTICAST;
 	dev->net->ethtool_ops = &sierra_net_ethtool_ops;
 	netif_carrier_off(dev->net);
 
@@ -806,6 +810,8 @@
 	int err;
 	struct hip_hdr  hh;
 	struct sk_buff *new_skb;
+	struct ethhdr *eth;
+	struct iphdr *ip;
 
 	dev_dbg(&dev->udev->dev, "%s", __func__);
 
@@ -838,6 +844,12 @@
 		memcpy(skb->data, sierra_net_get_private(dev)->ethr_hdr_tmpl,
 			ETH_HLEN);
 
+		ip = (struct iphdr *)((char *)skb->data + ETH_HLEN);
+		if(ip->version == 6) {
+			eth = (struct ethhdr *)skb->data;
+			eth->h_proto = cpu_to_be16(ETH_P_IPV6);
+		}
+
 		/* Last packet in batch handled by usbnet */
 		if (hh.payload_len.word == skb->len)
 			return 1;
@@ -967,4 +979,4 @@
 MODULE_AUTHOR(DRIVER_AUTHOR);
 MODULE_DESCRIPTION(DRIVER_DESC);
 MODULE_VERSION(DRIVER_VERSION);
-MODULE_LICENSE("GPL");
+MODULE_LICENSE("GPL");
