#ifndef __CVMX_RESOURCES_CONFIG__
#define __CVMX_RESOURCES_CONFIG__


#if (CVMX_HELPER_FIRST_MBUFF_SKIP > 256)
#error CVMX_HELPER_FIRST_MBUFF_SKIP is greater than the maximum of 256
#endif

#if (CVMX_HELPER_NOT_FIRST_MBUFF_SKIP > 256)
#error CVMX_HELPER_NOT_FIRST_MBUFF_SKIP is greater than the maximum of 256
#endif


/* Content below this point is only used by the cvmx-config tool, and is
** not used by any C files as CAVIUM_COMPONENT_REQUIREMENT is never
defined.
*/
 #ifdef CAVIUM_COMPONENT_REQUIREMENT
    /* Define the number of LLM ports (interfaces), can be 1 or 2 */
    cvmxconfig
    {
    	#if CVMX_LLM_CONFIG_NUM_PORTS == 2
            define CVMX_LLM_NUM_PORTS value = 2;
	#else
            define CVMX_LLM_NUM_PORTS value = 1;
	#endif
    }
    /* Control the setting of Null pointer detection, default to enabled */
    cvmxconfig {
    	#ifdef CVMX_CONFIG_NULL_POINTER_PROTECT
            define CVMX_NULL_POINTER_PROTECT value = CVMX_CONFIG_NULL_POINTER_PROTECT;
	#else
            define CVMX_NULL_POINTER_PROTECT value = 1;
	#endif
    }
    /* Control Debug prints, default to enabled */
    cvmxconfig {
    	#ifdef CVMX_CONFIG_ENABLE_DEBUG_PRINTS
            define CVMX_ENABLE_DEBUG_PRINTS value = CVMX_CONFIG_ENABLE_DEBUG_PRINTS;
	#else
            define CVMX_ENABLE_DEBUG_PRINTS value = 1;
	#endif
    }

    /* Define CVMX_ENABLE_DFA_FUNCTIONS to allocate resources for the DFA functions */
    #ifdef CVMX_ENABLE_DFA_FUNCTIONS
        cvmxconfig
        {
        	fpa CVMX_FPA_DFA_POOL
                    size        = 2
                    pool        = 4
                    description = "DFA command buffers";
        	fau CVMX_FAU_DFA_STATE
                    size        = 8
                    count       = 1
                    description = "FAU registers for the state of the DFA command queue";
        }
    #endif

    /* Define CVMX_ENABLE_PKO_FUNCTIONS to allocate resources for the PKO functions */
    #ifdef CVMX_ENABLE_PKO_FUNCTIONS
        cvmxconfig
        {
		define CVMX_PKO_QUEUES_PER_PORT_INTERFACE0
		    value       = CVMX_HELPER_PKO_QUEUES_PER_PORT_INTERFACE0
		    description = "PKO queues per port for interface 0 (ports 0-15)";
		define CVMX_PKO_QUEUES_PER_PORT_INTERFACE1
		    value       = CVMX_HELPER_PKO_QUEUES_PER_PORT_INTERFACE1
		    description = "PKO queues per port for interface 1 (ports 16-31)";
                define CVMX_PKO_MAX_PORTS_INTERFACE0
                    value       = CVMX_HELPER_PKO_MAX_PORTS_INTERFACE0
                    description = "Limit on the number of PKO ports enabled for interface 0";
                define CVMX_PKO_MAX_PORTS_INTERFACE1
                    value       = CVMX_HELPER_PKO_MAX_PORTS_INTERFACE1
                    description = "Limit on the number of PKO ports enabled for interface 1";
		define CVMX_PKO_QUEUES_PER_PORT_PCI
		    value       = 1
		    description = "PKO queues per port for PCI (ports 32-35)";
		define CVMX_PKO_QUEUES_PER_PORT_LOOP
		    value       = 1
		    description = "PKO queues per port for Loop devices (ports 36-39)";
		define CVMX_FPA_PACKET_POOL_SIZE
		    value       = CVMX_FPA_POOL_0_SIZE
		    description = "Packet buffers size";
        	fpa CVMX_FPA_PACKET_POOL
                    size        = 12
                    priority    = 1
                    description = "Packet buffers";
        	fpa CVMX_FPA_OUTPUT_BUFFER_POOL
                    size        = 8
                    protected   = 1
                    description = "PKO queue command buffers";
        	scratch CVMX_SCR_SCRATCH
                    size        = 8
                    iobdma      = true
                    permanent   = false
                    description = "Generic scratch iobdma area";
        }
    #endif

    /* Define CVMX_ENABLE_HELPER_FUNCTIONS to allocate resources for the helper functions */
    #ifdef CVMX_ENABLE_HELPER_FUNCTIONS
        cvmxconfig
        {
        	fpa CVMX_FPA_WQE_POOL
                    size        = 1
                    priority    = 1
                    description = "Work queue entrys";
        }
    #endif

    /* Define CVMX_ENABLE_TIMER_FUNCTIONS to allocate resources for the timer functions */
    #ifdef CVMX_ENABLE_TIMER_FUNCTIONS
        cvmxconfig
        {
        	fpa CVMX_FPA_TIMER_POOL
                    size        = 8
                    protected   = 1
                    description = "TIM command buffers";
        }
    #endif

#endif


#endif  /* __CVMX_RESOURCES_CONFIG__ */
